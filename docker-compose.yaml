ersion: '3.8'

services:


  api:
    build:
      context: .
    depends_on:
      db:
        condition: service_healthy
      migrations:
        condition: service_completed_successfully
    ports:
      - '8000:8000'
    volumes:
      - ./.env:/app/.env


  migrations:
    build: .
    image: mixola/todolist

    depends_on:
      db:
        condition: service_healthy
    volumes:
      - ./.env:/app/.env
    command: python manage.py migrate


  db:
    image: postgres:14.6-alpine
    restart: on-failure
    environment:
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - pg_data:/var/lib/postgresql/data
    ports:
      - '${POSTGRES_PORT:-5432}:5432'
    healthcheck:
      test: pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}
      interval: 3s
      timeout: 3s
      retries: 3

volumes:
    pg_data: